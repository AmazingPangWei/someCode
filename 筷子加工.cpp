///*
//3.筷子加工
//现有n根木棒，已知他们的长度和重量，要用一部木工机一根一根地加工这些木棒。
//该机器在加工过程中需要一定的准备时间，是用于清洗机器，调整工具和模板的。
//木工机需要的时间如下：
//(1)第一根木棒需要1min的准备时间；
//(2)在加工了一根长为l1，重为w1的木棒之后，接着加工一根长为l2(l1<l2),重为
//w2(w1<w2)的木棒是不需要准备时间的， 否则需要1min的准备时间。
//给定n根木棒，你要找到最少的准备时间。例如，现在有长和重分别为(4,9),(5,2),
//(2,1),(3,5)和(1,4)的5根木棒，那么所需要准备时间最少为2min，顺序为(1,4),(3,5),
//(4,9),(2,1),(5,2)。
//
//intput
//
//输入有多组测试数据。
//第一行一个正整数T表示测试数据组数。
//每组测试数据占两行。
//第一行一个正整数n(1<=n<=5000),表示筷子的个数;
//第二行包括n*2个整数,表示l1,w1,l2,w2,l3,w3,...,ln,wn,全部不大于10000，
//其中li和wi表示第i跟木棒的长度和重量。数据由一个或多个空格分隔。
//
//output
//对每组测试数据，在一行中输出一个正整数为该组木棒加工所需的最少准备时间。
//*/
//
///*
//1.首先将所有筷子对其中一个属性按升序排序。
//2.对第二个属性按题目条件进行分组
//*/
//
//#include <iostream>
//#include <algorithm>
//#include <cstring>
//using namespace std;
//
//struct wood
//{
//	int len, w;
//	int G;//判断是否被处理
//};
//
//bool comp(wood a, wood b)
//{
//	if (a.len != b.len)
//		return a.len < b.len;
//	return a.w < b.w;
//}
//
//int main()
//{
//	int t;//  输入次数
//	wood a[5000];
//	cin >> t;
//	int time;//统计用时
//	while(t--)
//	{ 
//		time = 0; // 初始化
//		int n, i;
//		cin >> n;
//		for (i = 0;i < n;i++) 
//		{
//			cin >> a[i].len >> a[i].w;
//			a[i].G = 0;
//		}
//		sort(a, a + n, comp);
//		int sum = 0;//sum用于统计木头被标记为G的个数
//		int temp = 0;//始终指向未被标记的木头
//		while (sum != n)
//		{
//			temp = 0;
//			while (a[temp].G == 1)//指向未被统计的木头
//				temp++;
//			time++;
//			for(i=temp;i<n;i++)
//				if (a[i].G == 0 && a[i].len>=a[temp].len&&a[i].w>=a[temp].w)
//				{
//					a[i].G = 1;
//					temp = i;
//					sum++;
//				}
//		}
//		cout << time << endl;
//	}
//
//	system("pause");
//	return 0;
//}
//
